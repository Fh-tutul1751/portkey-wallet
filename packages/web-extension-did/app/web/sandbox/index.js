/* eslint-disable no-cond-assign */
// eslint-disable-next-line prettier/prettier
import t from"events";import*as a from"uuid";import{sleep as e,aelf as c}from"@portkey/utils";import{FetchRequest as r}from"@portkey/request";import{handleContractError as s,getContractBasic as o}from"@portkey/contracts";import"antd";var n,d=((n=d||{}).getBalances="@portkey/did-ui-sdk:getBalances",n.callViewMethod="@portkey/did-ui-sdk:callViewMethod",n.callSendMethod="@portkey/did-ui-sdk:callSendMethod",n.getTransactionFee="@portkey/did-ui-sdk:getTransactionFee",n.getTransactionRaw="getTransactionRaw",n.callCASendMethod="@portkey/did-ui-sdk:callCASendMethod",n.callSendMethodFormat="@portkey/did-ui-sdk:callSendMethodFormat",n.callViewMethodFormat="@portkey/did-ui-sdk:callViewMethodFormat",n.encodedTx="@portkey/did-ui-sdk:encodedTx",n),i=(t=>(t[t.error=0]="error",t[t.success=1]="success",t))(i||{});new t;class l{static async dispatch(t,c,r="sandbox"){let s=document.getElementById(r);s||(await e(1e3),s=document.createElement("iframe"));const o=a.v4().replace(/-/g,"");return s.contentWindow.postMessage({event:t,data:{...c,sid:o}},"*"),{event:t,sid:o}}static dispatchToOrigin(t,a){t?.source?.postMessage({...a,eventName:t.data.event},t.origin)}static listen({event:t,sid:a}){return new Promise((e=>{typeof window<"u"&&window.addEventListener("message",(c=>{c.data.eventName===t&&c.data.sid===a&&e(c.data)}))}))}static async dispatchAndReceive(t,a,e="sandbox"){const c=await l.dispatch(t,a,e);return l.listen(c)}}const p=(t,a)=>(t=(t=>t?.error||t)(t),(t=s(t))?"string"==typeof t?t:"string"==typeof t.message?t.message:a:a),h=t=>{let a;return Object.entries(t).reverse().map((([t,e])=>{e||(a=t)})),a},m="f6e512a3c259e5f9af981d7f99d245aa5bc52fe448495e0b0dd56e8406be6f71";c.getWallet(m);const w={},u={},g={};class y{constructor(){this.listener()}static callback(t,a){l.dispatchToOrigin(t,a)}listener(){typeof window>"u"||window.addEventListener("message",(async function(t){switch(t.data.event){case d.callViewMethod:y.callViewMethod(t,y.callback);break;case d.callSendMethod:y.callSendMethod(t,y.callback);break;case d.callCASendMethod:y.callCASendMethod(t,y.callback);break;case d.getTransactionFee:y.getTransactionFee(t,y.callback);break;case d.getTransactionRaw:y.getTransactionRaw(t,y.callback);break;case d.callSendMethodFormat:y.callSendMethodFormat(t,y.callback);break;case d.callViewMethodFormat:y.callViewMethodFormat(t,y.callback);break;case d.encodedTx:y.encodedTx(t,y.callback)}}))}static async _getELFViewContract(t,a,e=m){let r=w?.[t]?.[a];return r||(r=await o({contractAddress:a,account:c.getWallet(e),rpcUrl:t}),w?.[t]||(w[t]={}),w[t][a]=r),r}static async _getELFSendContract(t,a,e){let r=u?.[t]?.[e]?.[a];return r||(r=await o({contractAddress:a,account:c.getWallet(e),rpcUrl:t}),u?.[t]||(u[t]={}),u?.[t]?.[e]||(u[t][e]={}),u[t][e][a]=r),r}static async getCAContract({rpcUrl:t,privateKey:a,caContractAddress:e,contractAddress:r,caHash:s}){let n=g?.[t]?.[a]?.[`${r}-${s}`];return n||(n=await o({contractAddress:r,account:c.getWallet(a),caContractAddress:e,callType:"ca",caHash:s,rpcUrl:t}),g?.[t]||(g[t]={}),g?.[t]?.[a]||(g[t][a]={}),g[t][a][`${r}-${s}`]=n),n}static async callViewMethod(t,a){const e=t.data.data??{};try{const{rpcUrl:c,address:r,methodName:s,paramsOption:o="",chainType:n}=e;if(!c||!r||!s)throw"Invalid argument";if("aelf"!==n)throw"Not support";const d=await((await y._getELFViewContract(c,r))?.callViewMethod(s,o));if(d.error)throw d.error;a(t,{code:i.success,message:d.data,sid:e.sid})}catch(c){a(t,{code:i.error,error:p(c),sid:e.sid})}}static async callCASendMethod(t,a){const e=t.data.data??{};try{const{rpcUrl:r,contractAddress:s,methodName:o,privateKey:n,caContractAddress:d,caHash:l,paramsOption:p,chainType:m,sendOptions:w}=e,u=h({rpcUrl:r,contractAddress:s,methodName:o,caContractAddress:d});if(u)throw`Miss Param: ${u}`;if("aelf"!==m)throw"Not support";const g=await y.getCAContract({contractAddress:s,privateKey:n,caContractAddress:d,caHash:l,rpcUrl:r}),f=c.getWallet(n),M=await g.callSendMethod(o,f,p,w);if(M?.error)throw M.error;return a(t,{code:i.success,message:M?.data,sid:e.sid,transactionId:M.transactionId})}catch(c){a(t,{code:i.error,error:p(c),sid:e.sid})}}static async callSendMethod(t,a){const e=t.data.data??{};try{const{rpcUrl:r,address:s,methodName:o,privateKey:n,paramsOption:d,chainType:l,isGetSignTx:p=0,sendOptions:m}=e,w=h({rpcUrl:r,address:s,methodName:o});if(w)throw`Miss Param: ${w}`;if("aelf"!==l)throw"Not support";const u=c.getWallet(n),g=await y._getELFSendContract(r,s,n),f=await((p?g?.encodedTx:g?.callSendMethod)?.(o,u,d,m));if(f?.error)throw f;return a(t,{code:i.success,message:f?.data,sid:e.sid})}catch(c){a(t,{code:i.error,error:p(c),sid:e.sid})}}static async getTransactionRaw(t,a){const e=t.data.data??{};try{const{rpcUrl:c,address:r,paramsOption:s,chainType:o,methodName:n,privateKey:d}=e;if("aelf"!==o)throw"Not support";const l=await(await y._getELFSendContract(c,r,d)).encodedTx(n,s);a(t,{code:i.success,message:l.data,sid:e.sid})}catch(c){return a(t,{code:i.error,error:c,sid:e.sid})}}static async getTransactionFee(t,a){const e=t.data.data??{};try{const{rpcUrl:s,address:o,paramsOption:n,chainType:d,methodName:l,privateKey:p}=e;if("aelf"!==d)throw"Not support";const h=c.getAelfInstance(s),m=await y._getELFSendContract(s,o,p),w=await c.encodedTx({instance:h,contract:m,functionName:l,paramsOption:n});if(w.error)throw w.error;const u=await new r({}).send({url:`${s}/api/blockChain/calculateTransactionFee`,method:"POST",params:{RawTransaction:w}});if(!u?.Success)throw"Transaction failed";a(t,{code:i.success,message:u.TransactionFee,sid:e.sid})}catch(c){return a(t,{code:i.error,error:c,sid:e.sid})}}static async callSendMethodFormat(t,a){const e=t.data.data??{};try{const{contractOptions:r,functionName:s,privateKey:n,paramsOption:d,sendOptions:l}=e,p=h({functionName:s,contractOptions:r,privateKey:n});if(p)throw`Miss Param: ${p}`;const m=c.getWallet(n);r.account=m;const w=await(await o(r)).callSendMethod(s,m.address,d,l);return a(t,{code:i.success,message:w,sid:e.sid})}catch(c){a(t,{code:i.error,error:p(c),sid:e.sid})}}static async callViewMethodFormat(t,a){const e=t.data.data??{};try{const{contractOptions:r,functionName:s,paramsOption:n,callOptions:d}=e,l=h({functionName:s,contractOptions:r});if(l)throw`Miss Param: ${l}`;const p=c.getWallet(m);r.account=p;const w=await(await o(r)).callViewMethod(s,n,d);return a(t,{code:i.success,message:w,sid:e.sid})}catch(c){a(t,{code:i.error,error:p(c),sid:e.sid})}}static async encodedTx(t,a){const e=t.data.data??{};try{const{contractOptions:r,functionName:s,privateKey:n,paramsOption:d}=e,l=h({functionName:s,contractOptions:r});if(l)throw Error(`Miss Param: ${l}`);const p=c.getWallet(n);r.account=p;const m=await(await o(r)).encodedTx(s,d);return a(t,{code:i.success,message:m,sid:e.sid})}catch(c){a(t,{code:i.error,error:p(c),sid:e.sid})}}}new y;
//# sourceMappingURL=index.js.map
